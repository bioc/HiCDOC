// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// constrainedClustering
IntegerVector constrainedClustering(NumericMatrix& matrix, IntegerMatrix& links, double maxDistance, int maxIterations, int nRestarts);
RcppExport SEXP _HiCDOC_constrainedClustering(SEXP matrixSEXP, SEXP linksSEXP, SEXP maxDistanceSEXP, SEXP maxIterationsSEXP, SEXP nRestartsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix& >::type links(linksSEXP);
    Rcpp::traits::input_parameter< double >::type maxDistance(maxDistanceSEXP);
    Rcpp::traits::input_parameter< int >::type maxIterations(maxIterationsSEXP);
    Rcpp::traits::input_parameter< int >::type nRestarts(nRestartsSEXP);
    rcpp_result_gen = Rcpp::wrap(constrainedClustering(matrix, links, maxDistance, maxIterations, nRestarts));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HiCDOC_constrainedClustering", (DL_FUNC) &_HiCDOC_constrainedClustering, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_HiCDOC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
