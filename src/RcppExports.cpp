// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// constrainedClustering
List constrainedClustering(NumericMatrix& matrix, IntegerMatrix& links, double maxDelta, int maxIterations, int totalRestarts, int totalClusters);
RcppExport SEXP _HiCDOC_constrainedClustering(SEXP matrixSEXP, SEXP linksSEXP, SEXP maxDeltaSEXP, SEXP maxIterationsSEXP, SEXP totalRestartsSEXP, SEXP totalClustersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix& >::type links(linksSEXP);
    Rcpp::traits::input_parameter< double >::type maxDelta(maxDeltaSEXP);
    Rcpp::traits::input_parameter< int >::type maxIterations(maxIterationsSEXP);
    Rcpp::traits::input_parameter< int >::type totalRestarts(totalRestartsSEXP);
    Rcpp::traits::input_parameter< int >::type totalClusters(totalClustersSEXP);
    rcpp_result_gen = Rcpp::wrap(constrainedClustering(matrix, links, maxDelta, maxIterations, totalRestarts, totalClusters));
    return rcpp_result_gen;
END_RCPP
}
// parseHic
DataFrame parseHic(std::string& fname, int resolution);
RcppExport SEXP _HiCDOC_parseHic(SEXP fnameSEXP, SEXP resolutionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type fname(fnameSEXP);
    Rcpp::traits::input_parameter< int >::type resolution(resolutionSEXP);
    rcpp_result_gen = Rcpp::wrap(parseHic(fname, resolution));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HiCDOC_constrainedClustering", (DL_FUNC) &_HiCDOC_constrainedClustering, 6},
    {"_HiCDOC_parseHic", (DL_FUNC) &_HiCDOC_parseHic, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_HiCDOC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
